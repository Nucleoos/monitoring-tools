#!/usr/bin/env python
try:
    import logging
    backend = "Shinken"
    logger = logging.getLogger(backend)

    exit_code_output = {0: 'OK',
                        1: 'WARNING',
                        2: 'CRITICAL',
                        3: 'UNKNOWN',
                       }
    exit_code = 0


    # Get perfs
    data = {}
    for perf_d in ['ps_state-stopped', 'ps_state-sleeping', 'ps_state-paging',
                   'ps_state-zombies', 'ps_state-blocked', 'ps_state-running',
                   'fork_rate']:
        try:
            data[perf_d] = float(perf(perf_d))
        except TypeError:
            logger.warning("%s perf_data is missing for %s" % (perf_d, self.get_full_name()))
            logger.info("Dumping perf_data : %s" % self.perf_data)

    output = []
    perf_data = ""
    for key, value in data.items():
        output.append("%s: %0.2f" % (key, value))
        perf_data += " %s=%0.2f;;;" % (key, value)

    output = "Processes stats # "  + " - ".join(output)

    # Finish output
    output = " - ".join((exit_code_output[exit_code], output))

    # Set ouput
    set_value(self, output, perf_data, exit_code)

except Exception, e:
    set_value(self, "UNKNOWN: Trigger error: " + str(e), "", 3)

